Requirements: Create a new Magento 2 website with domain magento2.local on clean local.
1. Install nginx
2. Install php7.2
3. Install mysql-server
4. Create new mysql user (magento)
5. Create new ubuntu user(for remote host)(use current user on local)
6. Config nginx & php (domain, permission, web folder)
7. Create new database (magento231)
8. Upload/copy code
9. Install Magento 2 website

1. Install nginx
sudo apt-get install nginx -y
2. Install php7.2
Setup multi php version
sudo apt install software-properties-common
sudo add-apt-repository ppa:ondrej/php
sudo apt update
sudo apt install -y php7.2
sudo apt install -y php7.3
...
//install php extension
sudo apt install php7.2-fpm php7.2-mysql php7.2-curl php7.2-json php7.2-cgi php7.2-xsl
sudo apt install php7.2-bcmath php7.2-ctype php7.2-curl php7.2-dom php7.2-gd php7.2-iconv php7.2-intl php7.2-mbstring php7.2-odbc php7.2-mysql php7.2-simplexml php7.2-soap php7.2-xsl php7.2-zip -y
// to show all php version to select
sudo update-alternatives --config php

3. Install mysql-server
3.1: install new mysql version:
sudo apt-get install mysql-server -y
3.2: install old version (5.6):
link tham khao: https://gist.github.com/vinodpandey/1a4b5b8228f9a000ca236820185fc3bc
Link package mysql 5.6: https://dev.mysql.com/get/Downloads/MySQL-5.6/mysql-server_5.6.48-1debian9_amd64.deb-bundle.tar
Download version 5.6.46 from MySQL site
wget https://dev.mysql.com/get/Downloads/MySQL-5.6/mysql-5.6.46-linux-glibc2.12-x86_64.tar.gz
//Add mysql user group
sudo groupadd mysql
//Add mysql (not the current user) to mysql user group
sudo useradd -g mysql mysql
//Extract it
sudo tar -xvf mysql-5.6.46-linux-glibc2.12-x86_64.tar.gz
//Move it to /usr/local
sudo mv mysql-5.6.46-linux-glibc2.12-x86_64 /usr/local/
//Create mysql folder in /usr/local by moving the untarred folder
cd /usr/local
sudo mv mysql-5.6.46-linux-glibc2.12-x86_64 mysql

//set MySql directory owner and user group
cd mysql
sudo chown -R mysql:mysql *
//Install the required lib package
sudo apt-get install libaio1 libncurses5
//Execute mysql installation script
sudo scripts/mysql_install_db --user=mysql
//Set mysql directory owner from outside the mysql directory
sudo chown -R root .
//Set data directory owner from inside mysql directory
sudo chown -R mysql data
//Copy the mysql configuration file
sudo cp support-files/my-default.cnf /etc/my.cnf
//Start mysql
sudo bin/mysqld_safe --user=mysql &
sudo cp support-files/mysql.server /etc/init.d/mysql.server
//Set root user password
sudo bin/mysqladmin -u root password 'pwroot' // pwroot is password
//Add mysql path to the system
sudo ln -s /usr/local/mysql/bin/mysql /usr/local/bin/mysql

//Start mysql server
sudo /etc/init.d/mysql.server start
//Stop mysql server
sudo /etc/init.d/mysql.server stop
//Check status of mysql
sudo /etc/init.d/mysql.server status
//Enable myql on startup
sudo update-rc.d -f mysql.server defaults
//Disable mysql on startup (Optional)
sudo update-rc.d -f mysql.server remove


4. Create new mysql user (magento)
mysql -u root -p
CREATE USER 'magento'@'localhost' IDENTIFIED BY 'magento123';
GRANT ALL PRIVILEGES ON * . * TO 'magento'@'localhost';
FLUSH PRIVILEGES;

5. Create new ubuntu user(for remote host)(use current user on local)
Skip - not require
adduser magento
pass: 12345

6. Config nginx & php (domain, permission, web folder)
tao thu muc
sudo mkdir /var/www/html/magento2.local
------------
sudo nano /etc/nginx/nginx.conf
change "user www-data;" to "user magento;"
------------
sudo nano /etc/php/7.2/fpm/pool.d/www.conf 
change some information to 
user = magento
group = magento
listen.owner = magento
listen.group = magento

open file /etc/nginx/sites-available/default
add 
upstream fastcgi_backend {
        server  unix:/var/run/php/php7.2-fpm.sock;
}
....
create new file magento2.local in /etc/nginx/sites-available/
with content:
server {
	server_name magento2.local;
	set $MAGE_ROOT /var/www/html/magento2.local/;
  include /var/www/html/magento2.local/nginx.conf.sample;
}



7. Create new database (magento231)
mysql -u magento -p
CREATE DATABASE magento231;

8. Upload/copy code
upload code magento vao thu muc /var/www/html/magento2.local/


-----------------------------------Restart nginx-------------------------------------------------------------------
sudo chown -R magento:magento /usr/bin/php
sudo chown -R magento:magento /var/run/php
sudo chown -R magento:magento /var/log/nginx

Restart nginx by 
sudo service nginx restart
sudo service php7.2-fpm restart
-----------------------------------BUILD MAGENTO SITE--NON-HTTPS---------------------------------------------------
php bin/magento setup:install --base-url="http://magento2.local/" --db-host="localhost" --db-name="magento231" --db-user="magento" --db-password="magento123" --admin-firstname="admin" --admin-lastname="admin" --admin-email="admin@localhost.com" --admin-user="admin" --admin-password="admin123" --language="en_US" --currency="USD" --timezone="America/Chicago" --use-rewrites="1" --backend-frontname="admin"

-----------------------------------BUILD MAGENTO SITE---HTTPS-----------------------------------------------------
php bin/magento setup:install --base-url="https://magento2.local/" --db-host="localhost" --db-name="magento231" --db-user="magento" --db-password="magento123" --admin-firstname="admin" --admin-lastname="admin" --admin-email="admin@localhost.com" --admin-user="admin" --admin-password="admin123" --language="en_US" --currency="USD" --timezone="America/Chicago" --use-rewrites="1" --backend-frontname="admin" --use-secure="1" --base-url-secure="https://magento2.local/" --use-secure-admin="1"

----------------
sudo chmod -R 777 var/ generated/ pub/static/


